[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autogpt_core"
version = "0.1.0"
description = "An AI-powered autogpt agent for full business automation"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    { name = "Aditya Ak", email = "aakuskar.980@gmail.com" }
]
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "streamlit>=1.28.2",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.4.2",
    "langgraph>=0.1.0",
    "google-generativeai>=0.3.1",
    "pytest>=7.4.3",
    "black>=23.10.1",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "python-multipart>=0.0.6",
    "aiohttp>=3.9.1",
    "pandas>=2.1.3",
    "numpy>=1.26.2",
    "plotly>=5.18.0",
    "google-search-results>=2.4.2",
    "pytrends>=4.9.2",
    "beautifulsoup4>=4.12.2",

    # Aligned langchain ecosystem packages for compatibility:
    "langchain-core==0.3.66",
    "langchain-groq==0.3.4",
    "langchain-openai==0.3.27",
    "langgraph-checkpoint==2.1.0",
    "langgraph-prebuilt==0.5.1",

    # Optionally include meta package if needed, but be aware it may pull different versions
    # "langchain",  

    "aiofiles"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "black>=23.10.1",
    "isort>=5.12.0",
    "flake8>=6.1.0"
]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=autogpt_core"

[project.scripts]
market-research = "app.main:main"

[tool.hatch.build.targets.wheel]
packages = [
    "autogpt_core",
    "app",
    "services",
    "utils"
]
